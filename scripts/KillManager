#!/bin/sh
                                                                                
# Cleanly terminate the DC1 Pipeline
#	input arg1:  pathname to the policy directory; no default
#	input arg2:  pathname to the input queue directory; default = ./queue

# Use:  KillManager.sh ~/policy ~/queue
# Use:  KillManager.sh ~/policy 

if [ $# -eq 2 ]; then
	inQueue=$2
	policyDir=$1
elif [ $# -eq 1 ]; then
	policyDir=$1
	inQueue="./queue"
else
	echo "Syntax: KillManager.sh <policyDir> <inputQueue>"
	exit 1
fi

if [ ! -d $policyDir ]; then
	echo "Policy directory : $policyDir  not found"
        exit 1
fi

if [ ! -r $policyDir/logging.policy ]; then
	echo "Policy file : $policyDir/logging.policy  not found"
        exit 1
fi

if [ ! -d $inQueue ]; then
	echo "input Queue: $inQueue  not found"
        exit 1
fi
                                                                                
# acquire the central logging filename
centralLog=`grep '^centralLogFile' $1/logging.policy | sed -e "s/centralLogFile *= *//" | sed -e "s/#.*//" -e "s/^ *//"`


# assumes first manager log data labelled: manager.main.start
linenumber=`pr -n $centralLog | grep manager.main.start | head -1 | sed -e "s/ *//" -e "s/\([0-9]*\).*/\1/"`
#echo "linenumber: $linenumber"
                                                                                
# assumes relevant text block is 6 lines long counting back from ${linenumber}
pid=`head -${linenumber} $centralLog | tail -6 | grep MYPID | sed -e "s/.*: \([0-9]*\)/\1/"`
#echo "PID: $pid"
                                                                                
host=`head -${linenumber} $centralLog | tail -6 | grep HOST | sed -e "s/.*: \([0-9\.]*\)/\1/"`
#echo "HOST: $host"

if [ $pid -gt 0 ] && [ $host ]; then
    ret= `ssh $host kill -TERM $pid` 
    if [ "$ret" == "" ] ; then
        echo "Termination signal has been forwarded to manager."
                                                                                
        cp /dev/null ${inQueue}/DONE
        echo "Null file has been loaded into the image queue."
    else
        echo "Failed to issue termination signal to manager."
        exit 1
    fi
else
    echo "Unable to find manager details in log file: $1  ."
    exit 1
fi
