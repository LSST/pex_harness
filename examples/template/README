
pex_harness examples/template
----------------------------------------------

Running the example:
--------------------

To place the example stages into the working PYTHONPATH : 

% export PYTHONPATH ${PWD}/../stages:${PYTHONPATH}    (bash)

or 

% setenv PYTHONPATH ${PWD}/../stages:${PYTHONPATH}     (tcsh) 

One executes the pipeline then with:

% launchPipeline.py template_policy.paf  <some-run-id>

such as 

% launchPipeline.py template_policy.paf  test_2390

One can specify a name and a logging level on the command line as well:

% launchPipeline.py template_policy.paf test_10025 mytemplate -L 3 


Description
-----------

The template example demonstrates how to set up a simple Pipeline with a single Slice 
executing a single Stage. 

The template example has a single application stage, SampleStageSerial/SampleStageParallel, 
which may be found in  pex_harness/examples/stages/lsst/pexhexamples/pipeline.py

The sample stage is a dummy application stage that performs a few simple tasks: 
1) it overwrites the process() method of generic Stage,  
2) it retrieves the Clipboard from its inputQueue at the start of the process() method,
   and posts it to the outputQueue at the end,
3) it creates a version of the Log
4) it retrieves elements from its stage policy file and write them to the Log
As such, the SampleStageSerial/SampleStageParallel can serve as a useful template for building 
other application Stages that perform or wrap actual computation. 

By default this example will run with the Pipeline with one Slice on a single node.

The pipeline is then executed via, for example,

% launchPipeline.py template_policy.paf  test_2390

After execution the messages from the SampleStageParallel 

lsst.pexhexamples.pipeline.SampleStageParallel.process:  rank 0
lsst.pexhexamples.pipeline.SampleStageParallel.process:  stageId 1
lsst.pexhexamples.pipeline.SampleStageParallel.process:  universeSize 2
lsst.pexhexamples.pipeline.SampleStageParallel.process:  RunMode from Policy process

should be visible within Slice0.log.  

Although this example does not use events, the events-logging system does make use
of an ActiveMQ broker during initialization. If an ActiveMQ broker ("eventHostBroker") 
other than the LSST default (lsst8.ncsa.uiuc.edu) is used, this needs to be specified 
in the pipeline policy file under "eventBrokerHost". 


