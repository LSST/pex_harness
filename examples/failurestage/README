
pex_harness examples/failurestage
----------------------------------------------

Running the example:
--------------------

To place the example stages into the working PYTHONPATH : 

% export PYTHONPATH ${PWD}/../stages:${PYTHONPATH}    (bash)

or 

% setenv PYTHONPATH ${PWD}/../stages:${PYTHONPATH}     (tcsh) 

One executes the pipeline then with:

% launchPipeline.py failure_policy.paf  <some-run-id>

such as 

% launchPipeline.py failure_policy.paf  test_2390

One can specify a name and a logging level on the command line as well:

% launchPipeline.py failure_policy.paf test_10025 mytemplate -L 3 


Description
-----------

The example illustrates the feature of the harness wherein a Pipeline or Slice 
may execute a "failure stage" on a conditional basis, namely when some stage of
a pipeline throws an exception.  If an exception is throw in the process() 
method being executed within a Slice, then the Slice will execute the "parallelClass"
of the failure stage.  

We offer a concrete example of this functionality,  making use of two stages: 

SampleFailingStage
AppFailureStage

Their components

lsst.pexhexamples.pipeline.SampleFailingStageSerial 
lsst.pexhexamples.pipeline.SampleFailingStageParallel 

lsst.pexhexamples.pipeline.AppFailureStageSerial 
lsst.pexhexamples.pipeline.AppFailureStageParallel 

may be found in    examples/stages/lsst/pexhexamples/pipeline.py

The pipeline's main course is to simply run a single stage SampleFailingStage.
However, SampleFailingStage is encoded to throw a Runtime exception (either in 
preprocess() or process(), depending on stage policy.)
In the Pipeline policy file we configure AppFailureStage to be the 
failureStage that is executed in the event of an Exception occurring within the course
of the Pipeline execution. Running the Pipline demonstrates how AppFailureStage 
does indeed execute, and also how it accesses the Clipboard of SampleFailingStage 
in the case of an Exception.

By default this example will run with the Pipeline with one Slice on a single node.

The pipeline is then executed via, for example,

% launchPipeline.py failure_policy.paf  test_2390

Although this example does not use events, the events-logging system does make use
of an ActiveMQ broker during initialization. If an ActiveMQ broker ("eventHostBroker") 
other than the LSST default (lsst8.ncsa.uiuc.edu) is used, this needs to be specified 
in the pipeline policy file under "eventBrokerHost". 


