/**
\mainpage lsst::pex::harness;  the LSST Pipeline Harness

\section secIntro Introduction

The LSST Pipeline Harness is a package for constructing pipelines out of reusable scientific 
processing modules and executing pipelines within an parallel processing environment. 
The harness serves to separate middleware functionality---management of parallel processing, 
I/O functionality, access to persistence, aggregation and connection of processing stages, etc. 
The Pipeline class encapsulates the main executing pipeline; it spawns a number of 
parallel workers denoted Slices.  Both Pipeline and Slice workers execute a loop of 
application stages that have been provided with pipeline policy.  
The harness provides a Stage API for hosting an algorithm written 
by an application developer and integrating the application code into the LSST Pipeline Harness framework.  
Classes are provided to facilitate the encapsulation of serial code to be executed by stages within the central Pipeline 
and parallel code to be executed by stages within the Slice workers. 
The following cases show examples of application stages 
extending these classes for integration into the harness: 

   - \ref Example_Template : Template for testing an application Stage in a Pipeline

*/

//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

